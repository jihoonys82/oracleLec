--권한 조회
SELECT * FROM USER_SYS_PRIVS;

SELECT * FROM DBA_SYS_PRIVS
WHERE GRANTEE=UPPER('scott');

SELECT * FROM USER_TAB_PRIVS
WHERE GRANTEE=UPPER('scott');

SELECT * FROM DBA_TAB_PRIVS
WHERE GRANTEE=UPPER('scott');


--test 계정 생성 
CREATE USER test IDENTIFIED BY 1234;
--test 계정에 DB접속권한 부여 (by DBA) 
GRANT CREATE SESSION
TO test;


--scott 에게 CREATE USER 권한 부여하기 (DBA)
GRANT CREATE USER
TO scott
WITH ADMIN OPTION;

show user; -- (scott)

CREATE USER test2 IDENTIFIED BY 1234;
GRANT CREATE SESSION --(scott)
TO test2;

GRANT CREATE SESSION --(DBA)
TO test2;

REVOKE CREATE USER
FROM scott;

SELECT * FROM DBA_SYS_PRIVS
WHERE GRANTEE IN ('SCOTT', 'TEST', 'TEST2');

SELECT * FROM DBA_ROLE_PRIVS
WHERE GRANTEE IN ('SCOTT', 'TEST', 'TEST2');

SELECT * FROM DBA_SYS_PRIVS
WHERE GRANTEE IN ('RESOURCE', 'CONNECT');

SELECT * FROM DBA_SYS_PRIVS
WHERE GRANTEE IN (
    SELECT GRANTED_ROLE FROM DBA_ROLE_PRIVS
    WHERE GRANTEE = 'SCOTT' )
UNION
SELECT * FROM DBA_SYS_PRIVS
WHERE GRANTEE='SCOTT';

--ROLE 생성 (DBA) 
CREATE ROLE role_test; 

--롤에 권한 부여, 권한집합 생성 (DBA)
GRANT CREATE TABLE, CREATE SESSION, CREATE VIEW 
TO role_test;
--롤을 사용자에게 부여
GRANT role_test
TO test;
--확인
SELECT * FROM DBA_SYS_PRIVS
WHERE GRANTEE IN (
    SELECT GRANTED_ROLE FROM DBA_ROLE_PRIVS
    WHERE GRANTEE = 'TEST' )
UNION
SELECT * FROM DBA_SYS_PRIVS
WHERE GRANTEE='TEST';

-- test 사용자에게 scott.emp 테이블 select 객체 권한 부여하기;
GRANT SELECT
ON scott.emp
TO test;

-- test 사용자에게 scott.emp테이블 select 객체 권환 회수하기
REVOKE SELECT 
ON scott.emp
FROM test;